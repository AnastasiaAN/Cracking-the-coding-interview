6.Given an image represented by an NxN matrix, where each pixel in the image is 4 bytes, write a method to rotate the image by 90 degrees. Can you do this in place?

Solution 1
----------
Hints:
先对角交换，再水平行交换
----------
#include<vector>
#include<string>
#include<iostream>
#include<algorithm>
using namespace std;


void Rotation(int matrix[][4],int n)
{
	for (int i = 0; i < n; i++)
	{
		for (int j = i + 1; j < n; j++)
		{
			matrix[i][j] ^= matrix[j][i];
			matrix[j][i] ^= matrix[i][j];
			matrix[i][j] ^= matrix[j][i];
		}
	}
	for (int i = 0; i < n / 2; i++)
	{
		for (int j = 0; j < n; j++)
		{
			matrix[i][j] ^= matrix[n - 1 - i][j];
			matrix[n-1-i][j] ^= matrix[i][j];
			matrix[i][j] ^= matrix[n - 1 - i][j];
		}
	}
}



int main() {
	int test[4][4] = 
	{
		{1,2,3,4},
		{5,6,7,8},
		{9,10,11,12},
		{13,14,15,16}
	};
	Rotation(test, 4);
	for (int i = 0; i<4; ++i) {
		for (int j = 0; j<4; ++j)
			cout << test[i][j] << " ";
		cout << endl;
	}
	return 0;
}


延展问题：一个M*N矩阵用数组的形式储存 怎么用O（1）空间得出将矩阵旋转90°的结果
http://blog.csdn.net/danfeng827/article/details/7253796/
（循环至满足条件，得出应该交换的值现在所在的(i,j)。此问可用同样方法做。）
（TODO）